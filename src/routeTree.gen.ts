/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SettingsRouteRouteImport } from './routes/settings/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TasksIndexRouteImport } from './routes/tasks/index'
import { Route as SettingsIndexRouteImport } from './routes/settings/index'
import { Route as HelpCenterIndexRouteImport } from './routes/help-center/index'
import { Route as ChatsIndexRouteImport } from './routes/chats/index'
import { Route as AppsIndexRouteImport } from './routes/apps/index'
import { Route as SettingsNotificationsRouteImport } from './routes/settings/notifications'
import { Route as SettingsDisplayRouteImport } from './routes/settings/display'
import { Route as SettingsAppearanceRouteImport } from './routes/settings/appearance'
import { Route as SettingsAccountRouteImport } from './routes/settings/account'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'

const SettingsRouteRoute = SettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TasksIndexRoute = TasksIndexRouteImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const HelpCenterIndexRoute = HelpCenterIndexRouteImport.update({
  id: '/help-center/',
  path: '/help-center/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsIndexRoute = ChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsIndexRoute = AppsIndexRouteImport.update({
  id: '/apps/',
  path: '/apps/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsNotificationsRoute = SettingsNotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsDisplayRoute = SettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsAppearanceRoute = SettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsAccountRoute = SettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof SettingsAccountRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/display': typeof SettingsDisplayRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/apps': typeof AppsIndexRoute
  '/chats': typeof ChatsIndexRoute
  '/help-center': typeof HelpCenterIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/settings/account': typeof SettingsAccountRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/display': typeof SettingsDisplayRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/apps': typeof AppsIndexRoute
  '/chats': typeof ChatsIndexRoute
  '/help-center': typeof HelpCenterIndexRoute
  '/settings': typeof SettingsIndexRoute
  '/tasks': typeof TasksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/settings/account': typeof SettingsAccountRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/display': typeof SettingsDisplayRoute
  '/settings/notifications': typeof SettingsNotificationsRoute
  '/apps/': typeof AppsIndexRoute
  '/chats/': typeof ChatsIndexRoute
  '/help-center/': typeof HelpCenterIndexRoute
  '/settings/': typeof SettingsIndexRoute
  '/tasks/': typeof TasksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/404'
    | '/500'
    | '/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps/'
    | '/chats/'
    | '/help-center/'
    | '/settings/'
    | '/tasks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
  AppsIndexRoute: typeof AppsIndexRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
  HelpCenterIndexRoute: typeof HelpCenterIndexRoute
  TasksIndexRoute: typeof TasksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tasks/': {
      id: '/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof TasksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/': {
      id: '/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof SettingsIndexRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/help-center/': {
      id: '/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof HelpCenterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/': {
      id: '/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AppsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/notifications': {
      id: '/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof SettingsNotificationsRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/display': {
      id: '/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof SettingsDisplayRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/appearance': {
      id: '/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsAppearanceRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/account': {
      id: '/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsAccountRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface SettingsRouteRouteChildren {
  SettingsAccountRoute: typeof SettingsAccountRoute
  SettingsAppearanceRoute: typeof SettingsAppearanceRoute
  SettingsDisplayRoute: typeof SettingsDisplayRoute
  SettingsNotificationsRoute: typeof SettingsNotificationsRoute
  SettingsIndexRoute: typeof SettingsIndexRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsAccountRoute: SettingsAccountRoute,
  SettingsAppearanceRoute: SettingsAppearanceRoute,
  SettingsDisplayRoute: SettingsDisplayRoute,
  SettingsNotificationsRoute: SettingsNotificationsRoute,
  SettingsIndexRoute: SettingsIndexRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
  AppsIndexRoute: AppsIndexRoute,
  ChatsIndexRoute: ChatsIndexRoute,
  HelpCenterIndexRoute: HelpCenterIndexRoute,
  TasksIndexRoute: TasksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
